<?php
/**
 * Created by PhpStorm.
 * User: admin
 * Date: 2018. 05. 22.
 * Time: 22:26
 */
namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * @ORM\Entity
 * @ORM\Table(name="projects")
 * @ORM\HasLifecycleCallbacks
 */
class Project
{
    /**
     * @ORM\Column(type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $project_id;

    /**
     * @ORM\Column(type="string", length=50, nullable=false)
     */
    private $project_name;

    /**
     * @ORM\Column(type="datetime")
     */
    private $project_startdate;

    /**
     * @ORM\Column(type="datetime")
     */
    private $project_enddate;

    /**
     * @ORM\Column(type="boolean")
     */
    private $project_active;

    /**
     * @ORM\OneToMany(targetEntity="AppBundle\Entity\UserProject", mappedBy="userproject_project")
     */
    private $project_userproject;

    /**
     * @ORM\OneToMany(targetEntity="AppBundle\Entity\Ticket", mappedBy="ticket_project")
     */
    private $project_ticket;
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->project_userproject = new \Doctrine\Common\Collections\ArrayCollection();
        $this->project_ticket = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Get projectId
     *
     * @return integer
     */
    public function getProjectId()
    {
        return $this->project_id;
    }

    /**
     * Set projectName
     *
     * @param string $projectName
     *
     * @return Project
     */
    public function setProjectName($projectName)
    {
        $this->project_name = $projectName;

        return $this;
    }

    /**
     * Get projectName
     *
     * @return string
     */
    public function getProjectName()
    {
        return $this->project_name;
    }

    /**
     * Set projectStartdate
     *
     * @param \DateTime $projectStartdate
     *
     * @return Project
     */
    public function setProjectStartdate($projectStartdate)
    {
        $this->project_startdate = $projectStartdate;

        return $this;
    }

    /**
     * Get projectStartdate
     *
     * @return \DateTime
     */
    public function getProjectStartdate()
    {
        return $this->project_startdate;
    }

    /**
     * Set projectEnddate
     *
     * @param \DateTime $projectEnddate
     *
     * @return Project
     */
    public function setProjectEnddate($projectEnddate)
    {
        $this->project_enddate = $projectEnddate;

        return $this;
    }

    /**
     * Get projectEnddate
     *
     * @return \DateTime
     */
    public function getProjectEnddate()
    {
        return $this->project_enddate;
    }

    /**
     * Set projectActive
     *
     * @param boolean $projectActive
     *
     * @return Project
     */
    public function setProjectActive($projectActive)
    {
        $this->project_active = $projectActive;

        return $this;
    }

    /**
     * Get projectActive
     *
     * @return boolean
     */
    public function getProjectActive()
    {
        return $this->project_active;
    }

    /**
     * Add projectUserproject
     *
     * @param \AppBundle\Entity\UserProject $projectUserproject
     *
     * @return Project
     */
    public function addProjectUserproject(\AppBundle\Entity\UserProject $projectUserproject)
    {
        $this->project_userproject[] = $projectUserproject;

        return $this;
    }

    /**
     * Remove projectUserproject
     *
     * @param \AppBundle\Entity\UserProject $projectUserproject
     */
    public function removeProjectUserproject(\AppBundle\Entity\UserProject $projectUserproject)
    {
        $this->project_userproject->removeElement($projectUserproject);
    }

    /**
     * Get projectUserproject
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getProjectUserproject()
    {
        return $this->project_userproject;
    }

    /**
     * Add projectTicket
     *
     * @param \AppBundle\Entity\Ticket $projectTicket
     *
     * @return Project
     */
    public function addProjectTicket(\AppBundle\Entity\Ticket $projectTicket)
    {
        $this->project_ticket[] = $projectTicket;

        return $this;
    }

    /**
     * Remove projectTicket
     *
     * @param \AppBundle\Entity\Ticket $projectTicket
     */
    public function removeProjectTicket(\AppBundle\Entity\Ticket $projectTicket)
    {
        $this->project_ticket->removeElement($projectTicket);
    }

    /**
     * Get projectTicket
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getProjectTicket()
    {
        return $this->project_ticket;
    }
}
